{"version":3,"sources":["multilateral-partitioning.coffee"],"names":[],"mappings":"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","file":"multilateral-partitioning.js","sourceRoot":"/source/","sourcesContent":["# jsTest - Test Case Generator and Test Analyzer\n# @version v1.0.0\n# @link\n# @license ISC\n\n_ = require('lodash')\n\nclass MultilateralPartioning\n  inputs: {}\n\n  validateInputItem: (input) ->\n    unless (input.equivalenceClasses)\n      throw new Error(\"Input has no equivalence classes attr\")\n    else unless (input.name)\n      throw new Error(\"Input has no name attr\")\n    else\n      input.equivalenceClasses\n\n  addInput: (input) ->\n    equClasses = @validateInputItem(input)\n    if (@inputs.hasOwnProperty(name))\n      currentClasses = @inputs[input.name].equivalenceClasses\n      _.merge(currentClasses, equClasses)\n    else\n      equClasses\n    return\n\n  addEquivalence: (predicate) ->\n    next = []\n    for i in @equivalence\n      next.push(@equivalence[i] ^ predicate)\n    @equivalence = _.merge(@equivalence, next)\n\n  loopThroughDifference: (result, fromBefore) ->\n    i = 0\n    while i < result.length\n      hasSeen = fromBefore.indexOf(result[i])\n      addEquivalence(result[i]) if (hasSeen is -1)\n      i += 1\n\n  addInputClasses: (inputClasses) ->\n    @inputs = @inputs || new Object({})\n    for input of inputClasses\n      result = @addInput(input)\n      fromBefore = @inputs[input.name].equivalenceClasses[i]\n      loopThroughDifference(result, fromBefore)\n\n  addEquivalenceClasses: (inputClasses) ->\n    @equivalenceClasses = @equivalenceClasses || new Array()\n    @addInputClasses(inputClasses)\n\n  constructor: (inputClasses) ->\n    @addEquivalenceClasses(inputClasses)\n"]}