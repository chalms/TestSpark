{"version":3,"sources":["program-test.coffee"],"names":[],"mappings":"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","file":"program-test.js","sourceRoot":"/source/","sourcesContent":["\n # jsTest - Test Case Generator and Test Analyzer\n # @version v1.0.0\n # @link\n # @license ISC\n\nPredicate = (predicate) ->\n  _this[\"p\"] = (condition) ->\n    (if args then (predicate(args)) else false)\n  _this[\"p`\"] = (args) ->\n    (if args then (not predicate(args)) else true)\n  _this\n\nPredicateList = (list) ->\n  _this = list\n  for key of list\n    _this[key] = (if Number.isInteger(list[key]) then new Predicate(predicates[key]) else new Predicate(list[key]))\n  _this\n\nRequirement = (requirement) ->\n  _this = requirement\n  _this.predicates = new PredicateList(requirement.predicates)\n  _this\nrequirements = require(\"./requirements.json\")\npredicates = require(\"./predicates.json\")\nTest = (predicateName, predicate) ->\n  E: predicate[predicateName][\"p\"]\n  U: predicate[predicateName][\"p`\"]\n\nTest::run = ->\n  runTest = (testString) ->\n    test = _this[testString]\n    if testString is \"E\"\n      console.log colors.yellow(\"Equivalence Tests: \")\n    else if testString is \"U\"\n      console.log colors.yellow(\"Un-Equivalence Tests: \")\n    else\n      throw new Error(\"\")\n    for key of test\n      console.log \"Testing Predicate \" + key + \": \"\n      _results[test] = test[key](obj)\n      if _results[test]\n        console.log colors.green(\"Pass!\")\n      else\n        console.log colors.red(\"Fail!\")\n    return\n  _results = {}\n  _this = this\n  runTest string\n  return\n\nRequirement::buildTest = ->\n  _this = {}\n  for predicate of @predicates\n    _this[predicate] = new Test(@predicate, @predicates[predicate])\n  _this\n\nrequirements.build = ->\n  _this = {}\n  for requirement of requirements\n    requirements[requirement].name = requirement\n    _this[requirement] = new Requirement(requirements[requirement])\n  _this\n\nrequirements = requirements.build().buildTests()\nrequirements.buildTests = ->\n  _this = {}\n  for requirementName of this\n    requirement = requirements[requirementName]\n    if typeof requirement isnt \"object\"\n      throw new Error(\"Requirements is not an object!\")\n    if typeof requirement.predicates isnt \"object\"\n      throw new Error(\"Requirement \" + requirementName + \" has no predicates objects!\")\n    _this[requirement.name] = requirement.buildTest()\n  _this\n\ntests = requirements.buildTests()\ntests.resetNumber = ->\n  @number = 0\n  @number\n\ntests.getNumber = ->\n  @number = 0  if not @number or (not Number.isInteger(@number))\n  @number\n\ntests.run = (runList) ->\n  @resetNumber()\n  console.log colors.cyan(\"\\nLaunching Tests:\\n\")\n  _results = {}\n  for test of runList\n    _results = this[test].run(runList[test])\n  _results\n"]}