{"version":3,"sources":["test/test.coffee"],"names":[],"mappings":"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","file":"test/test.js","sourceRoot":"/source/","sourcesContent":["colors = require \"colors\"\n\ntests =\n  obj: (\n    isPrototypeOfObject: ((obj) -> return (Object(obj).isPrototypeOf Object)),\n    hasName: ((obj) -> return (!(obj.name is undefined or obj.name is null))),\n    nameIsString: ((obj) -> return (typeof obj.name is 'string')),\n    hasFunction: ((obj, funct, args) -> return (!(obj[funct] is undefined or obj[funct] is null)))\n  )\n  arr: (\n    isPrototypeOfArray: ((obj) -> return (Object(obj).isPrototypeOf Array)),\n    isNotEmpty: ((obj) -> return (obj.length is not 0)),\n    hasObjectsOfType: ((obj) ->\n        for o of obj\n          if (typeof o is not 'string')\n            return false\n        return true\n      )\n  )\n\nrunTest = (description, buildFunction, testFunction) ->\n  console.log(colors.cyan(\"\\n\" + description  + \"\\n\"))\n  buildFunction(testFunction)\n\nrunTest(\"Testing runtest module on object predicates\",\n  ((testFunction) ->\n    testObjects = {}\n    objectTest = new Object({})\n    objectTest.name = \"Chalmee\"\n    objectTest.getName = (() ->\n        return this.name\n      )\n    testObjects[\"obj\"] = objectTest\n    testFunction(testObjects)\n  ),((testObjects) ->\n    for objectName in testObjects\n      count = 0\n      passed = 0\n      for test in tests[objectName]\n        try\n          if tests[objectName][test](objectTest)\n            s = colors.green((objectName + \" passed test: \" + test))\n            passed += 1\n          else\n            s = colors.red((objectName + \"failed test: \" + test))\n        catch e\n            s = colors.red(e.getMessage())\n        finally\n          console.log(s)\n          count += 1\n      finalOut = colors.cyan(passed + \" of \" + count \" tests passed for \" + objectName)\n      console.log(finalOut)\n  )\n)\n\n\n"]}