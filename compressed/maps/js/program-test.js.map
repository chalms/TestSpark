{"version":3,"sources":["program-test.coffee"],"names":[],"mappings":"AAWgE","file":"program-test.js","sourceRoot":"/source/","sourcesContent":["\n # jsTest - Test Case Generator and Test Analyzer\n # @version v1.0.0\n # @link\n # @license ISC\n\n# InputVar = (input) ->\n#    # input.tes\n\n# Condition = (predicate) ->\n#   _this[\"E\"] = (condition) ->\n#     (if args then (predicate(args)) else false)\n#   _this[\"U\"] = (args) ->\n#     (if args then (not predicate(args)) else true)\n#   _this\n\n\n# Predicate = (list) ->\n#   _this = list\n#   for key of list\n#     _this[key] = (\n#       if Number.isInteger(list[key])\n#         new Condition(predicates[key])\n#       else\n#         new Condition(list[key])\n#       return\n#     )\n#   _this\n\n\n# TestUnit = (predicates) ->\n#   return new Predicate(predicates)\n\n# Requirement = (requirement) ->\n#   _this = requirement\n#   _this.testunit = new TestUnit(requirement.predicates)\n#   _this\n\n# requirements = require(\"./requirements.json\")\n# predicates = require(\"./predicates.json\")\n\n# Test = (predicateName, predicate) ->\n#   E: predicate[predicateName][\"p\"]\n#   U: predicate[predicateName][\"p`\"]\n\n# Test::run = ->\n#   runTest = (testString) ->\n#     test = _this[testString]\n#     if testString is \"E\"\n#       console.log colors.yellow(\"Equivalence Tests: \")\n#     else if testString is \"U\"\n#       console.log colors.yellow(\"Un-Equivalence Tests: \")\n#     else\n#       throw new Error(\"\")\n#     for key of test\n#       console.log \"Testing Predicate \" + key + \": \"\n#       _results[test] = test[key](obj)\n#       if _results[test]\n#         console.log colors.green(\"Pass!\")\n#       else\n#         console.log colors.red(\"Fail!\")\n#     return\n#   _results = {}\n#   _this = this\n#   runTest string\n#   return\n\n# Requirement::buildTest = ->\n#   _this = {}\n#   for predicate of @predicates\n#     _this[predicate] = new Test(@predicate, @predicates[predicate])\n#   _this\n\n# requirements.build = ->\n#   _this = {}\n#   for requirement of requirements\n#     requirements[requirement].name = requirement\n#     _this[requirement] = new Requirement(requirements[requirement])\n#   _this\n# requirements = requirements.build().buildTests()\n\n# requirements.buildTests = ->\n#   _this = {}\n#   for requirementName of this\n#     requirement = requirements[requirementName]\n#     if typeof requirement isnt \"object\"\n#       throw new Error(\"Requirements is not an object!\")\n#     if typeof requirement.predicates isnt \"object\"\n#       throw new Error(\"Requirement \" + requirementName + \" has no predicates\")\n#     _this[requirement.name] = requirement.buildTest()\n#   _this\n\n# tests = requirements.buildTests()\n# tests.resetNumber = ->\n#   @number = 0\n#   @number\n\n# tests.getNumber = ->\n#   @number = 0  if not @number or (not Number.isInteger(@number))\n#   @number\n\n# tests.run = (runList) ->\n#   @resetNumber()\n#   console.log colors.cyan(\"\\nLaunching Tests:\\n\")\n#   _results = {}\n#   for test of runList\n#     _results = this[test].run(runList[test])\n#   _results\n"]}